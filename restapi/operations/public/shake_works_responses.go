// Code generated by go-swagger; DO NOT EDIT.

package public

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"io"
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/MicahParks/shakesearch/models"
)

// ShakeWorksOKCode is the HTTP code returned for type ShakeWorksOK
const ShakeWorksOKCode int = 200

/*ShakeWorksOK The HTML document containing a snippet of Shakespeare's complete works.

swagger:response shakeWorksOK
*/
type ShakeWorksOK struct {

	/*
	  In: Body
	*/
	Payload io.ReadCloser `json:"body,omitempty"`
}

// NewShakeWorksOK creates ShakeWorksOK with default headers values
func NewShakeWorksOK() *ShakeWorksOK {

	return &ShakeWorksOK{}
}

// WithPayload adds the payload to the shake works o k response
func (o *ShakeWorksOK) WithPayload(payload io.ReadCloser) *ShakeWorksOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the shake works o k response
func (o *ShakeWorksOK) SetPayload(payload io.ReadCloser) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ShakeWorksOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

/*ShakeWorksDefault Unexpected error.

swagger:response shakeWorksDefault
*/
type ShakeWorksDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewShakeWorksDefault creates ShakeWorksDefault with default headers values
func NewShakeWorksDefault(code int) *ShakeWorksDefault {
	if code <= 0 {
		code = 500
	}

	return &ShakeWorksDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the shake works default response
func (o *ShakeWorksDefault) WithStatusCode(code int) *ShakeWorksDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the shake works default response
func (o *ShakeWorksDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the shake works default response
func (o *ShakeWorksDefault) WithPayload(payload *models.Error) *ShakeWorksDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the shake works default response
func (o *ShakeWorksDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ShakeWorksDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

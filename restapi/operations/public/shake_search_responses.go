// Code generated by go-swagger; DO NOT EDIT.

package public

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/MicahParks/shakesearch/models"
)

// ShakeSearchOKCode is the HTTP code returned for type ShakeSearchOK
const ShakeSearchOKCode int = 200

/*ShakeSearchOK A sorted array of results that are lines that match the given query.

swagger:response shakeSearchOK
*/
type ShakeSearchOK struct {

	/*
	  In: Body
	*/
	Payload []*models.Result `json:"body,omitempty"`
}

// NewShakeSearchOK creates ShakeSearchOK with default headers values
func NewShakeSearchOK() *ShakeSearchOK {

	return &ShakeSearchOK{}
}

// WithPayload adds the payload to the shake search o k response
func (o *ShakeSearchOK) WithPayload(payload []*models.Result) *ShakeSearchOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the shake search o k response
func (o *ShakeSearchOK) SetPayload(payload []*models.Result) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ShakeSearchOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		// return empty array
		payload = make([]*models.Result, 0, 50)
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

/*ShakeSearchDefault Unexpected error.

swagger:response shakeSearchDefault
*/
type ShakeSearchDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewShakeSearchDefault creates ShakeSearchDefault with default headers values
func NewShakeSearchDefault(code int) *ShakeSearchDefault {
	if code <= 0 {
		code = 500
	}

	return &ShakeSearchDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the shake search default response
func (o *ShakeSearchDefault) WithStatusCode(code int) *ShakeSearchDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the shake search default response
func (o *ShakeSearchDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the shake search default response
func (o *ShakeSearchDefault) WithPayload(payload *models.Error) *ShakeSearchDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the shake search default response
func (o *ShakeSearchDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ShakeSearchDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

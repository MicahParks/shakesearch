// Code generated by go-swagger; DO NOT EDIT.

package restapi

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

var (
	// SwaggerJSON embedded version of the swagger document used at generation time
	SwaggerJSON json.RawMessage
	// FlatSwaggerJSON embedded flattened version of the swagger document used at generation time
	FlatSwaggerJSON json.RawMessage
)

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "The Terse URL shortener.",
    "title": "Terse URL",
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    },
    "version": "0.0.1"
  },
  "host": "localhost:30000",
  "basePath": "/",
  "paths": {
    "/api/alive": {
      "get": {
        "description": "Any non-200 response means the service is not alive.",
        "tags": [
          "system"
        ],
        "summary": "Used by Caddy or other reverse proxy to determine if the service is alive.",
        "operationId": "alive",
        "responses": {
          "200": {
            "description": "Service is alive."
          }
        }
      }
    },
    "/search": {
      "get": {
        "description": "The string will be used in conjunction with this project to perform a fuzzy search on Shakespeare's' ",
        "tags": [
          "public"
        ],
        "summary": "Fuzzy search for a string of text in Shakespeare's works.",
        "operationId": "shakeSearch",
        "parameters": [
          {
            "type": "string",
            "name": "q",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "The fuzzy search was a success.",
            "headers": {
              "Location": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "An array of strings that contain a match. Sorted by their score."
              }
            }
          },
          "default": {
            "description": "Unexpected error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Error": {
      "type": "object",
      "required": [
        "code",
        "message"
      ],
      "properties": {
        "code": {
          "type": "integer"
        },
        "message": {
          "type": "string"
        }
      }
    }
  },
  "tags": [
    {
      "description": "Endpoints that are publicly accessible.",
      "name": "public"
    },
    {
      "description": "Endpoints required by the system that are not public facing.",
      "name": "system"
    }
  ]
}`))
	FlatSwaggerJSON = json.RawMessage([]byte(`{
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "The Terse URL shortener.",
    "title": "Terse URL",
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    },
    "version": "0.0.1"
  },
  "host": "localhost:30000",
  "basePath": "/",
  "paths": {
    "/api/alive": {
      "get": {
        "description": "Any non-200 response means the service is not alive.",
        "tags": [
          "system"
        ],
        "summary": "Used by Caddy or other reverse proxy to determine if the service is alive.",
        "operationId": "alive",
        "responses": {
          "200": {
            "description": "Service is alive."
          }
        }
      }
    },
    "/search": {
      "get": {
        "description": "The string will be used in conjunction with this project to perform a fuzzy search on Shakespeare's' ",
        "tags": [
          "public"
        ],
        "summary": "Fuzzy search for a string of text in Shakespeare's works.",
        "operationId": "shakeSearch",
        "parameters": [
          {
            "type": "string",
            "name": "q",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "The fuzzy search was a success.",
            "headers": {
              "Location": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "An array of strings that contain a match. Sorted by their score."
              }
            }
          },
          "default": {
            "description": "Unexpected error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Error": {
      "type": "object",
      "required": [
        "code",
        "message"
      ],
      "properties": {
        "code": {
          "type": "integer"
        },
        "message": {
          "type": "string"
        }
      }
    }
  },
  "tags": [
    {
      "description": "Endpoints that are publicly accessible.",
      "name": "public"
    },
    {
      "description": "Endpoints required by the system that are not public facing.",
      "name": "system"
    }
  ]
}`))
}
